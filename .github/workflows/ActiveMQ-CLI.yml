name: Build ActiveMQ CLI docker image

on: 
  push:
    branches: [ "main" ]
    tags: [ 'cli-*.*.*' ]
    paths: [ 'Activemq-cli/**' ]
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, labeled, unlabeled ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ActiveMQ-CLI

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set Release Version
        run: |
          echo "BUILD_VERSION=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
          
      - name: Set Required vars & secrets
        run: | 
          echo "${{ secrets.GH_TOKEN_PRS }}" > ./Activemq-cli/github_token.sec    

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Rule 1: For a push to the main branch, create tag '${{ env.BUILD_VERSION }}' as previously
            type=raw,value=${{ env.BUILD_VERSION }},enable=${{ github.ref == 'refs/heads/main' }}
            # Rule 2: For a Git Tag (e.g., cli-1.2.3), create tag 'cli-1.2.3'
            type=ref,event=tag,enable=${{ startsWith(github.ref, 'refs/tags/cli-') }}
            # Rule 3: For a labeled PR, create one combined tag
            type=raw,
            value=${{ env.BUILD_VERSION }}-pr-${{ github.event.pull_request.number }},
            enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ./Activemq-cli
          push: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'build-image-for-testing') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
