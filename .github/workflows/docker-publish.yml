name: build ActiveMQ package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/activemq:5.16.5

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build the Docker image
        run: 
          cd ActiveMQ-classic/5.16.5 && docker build . --file Dockerfile

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        #uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        #uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        #uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        uses: docker/build-push-action@v3
        with:
          context: ./ActiveMQ-classic/5.16.5
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          #tags: vietinis/activemq:latest
          labels: ${{ steps.meta.outputs.labels }}
