name: Build ActiveMQ docker image

on: 
  push:
    branches: [ "main" ]
    paths: ['ActiveMQ-classic/5.19.0-jdbc/**']
  pull_request:
    branches: [ "main" ]
  workflow_call:
    outputs:
      version:
        description: "Amq version"
        value: ${{ jobs.build.outputs.version }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ActiveMQ-JDBC

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables from versions.env
        shell: bash
        run: |
          cd ActiveMQ-classic/5.19.0-jdbc
          # Read the versions.env file line by line
          while IFS= read -r line || [ -n "$line" ]; do
            # Skip empty lines and comments
            if [[ -z "$line" || "$line" =~ ^# ]]; then
              continue
            fi
            
            # Use `echo` to append the variable to GITHUB_ENV
            echo "$line" >> $GITHUB_ENV
            
          done < versions.env

      - name: Set Release Version
        run: |
          echo "BUILD_VERSION=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
          echo "${{ env.AMQ_VERSION }}" >> $GITHUB_OUTPUT

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: 5.19.0-${{ env.BUILD_VERSION }}

      - name: Extract Docker metadata
        id: meta-jmx
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-jmx
          tags: 1.0.1-${{ env.BUILD_VERSION }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ./ActiveMQ-classic/5.19.0-jdbc/amq_dockerImage
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PROM_EXPORTER_VERSION=0.20.0
            POSTGRESQL_JDBC_DRIVER=${{ env.POSTGRESQL_JDBC_DRIVER }}
            AMQ_VERSION=${{ env.AMQ_VERSION }}
            HIKARICP_VERSION=${{ env.HIKARICP_VERSION }}
            JMX_EXPORTER_VERSION=${{ env.JMX_EXPORTER_VERSION }}

      - name: Build and push Docker image
        id: build-and-push-jmx
        uses: docker/build-push-action@v3
        with:
          context: ./ActiveMQ-classic/5.19.0-jdbc/jmx_dockerImage
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-jmx.outputs.tags }}
          labels: ${{ steps.meta-jmx.outputs.labels }}
          build-args: |
            EXPORTER_VERSION=1.0.1