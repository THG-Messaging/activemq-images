<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://activemq.apache.org/schema/core
    http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- Allows us to use system properties as variables in this configuration file -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>file:${activemq.conf}/credentials.properties</value>
		</property>
	</bean>
	<!-- Allows accessing the server log -->
	<!-- <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
    lazy-init="false" scope="singleton"
    init-method="start" destroy-method="stop"></bean> -->
	<bean id="postgres-ds-with-hikari-pool" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="jdbcUrl" value="jdbc:postgresql://postgres/postgres"/>
		<property name="username" value="postgres"/>
		<property name="password" value="mysecretpassword"/>
		<property name="poolName" value="hikari-amq-pool"/>
		<property name="maximumPoolSize" value="100"/>
		<property name="autoCommit" value="true"/>
		<property name="minimumIdle" value="8"/>
		<property name="keepaliveTime" value="30000"/>
		<property name="maxLifetime" value="300000"/>
		<property name="connectionTimeout" value="10000"/>
		<property name="idleTimeout" value="60000"/>
	</bean>
	<!--
        The <broker> element is used to configure the ActiveMQ broker.
    -->
	<broker xmlns="http://activemq.apache.org/schema/core" useJmx="true" brokerName="tepstelis" dataDirectory="${activemq.data}">
		<destinationPolicy>
			<policyMap>
				<policyEntries>
					<policyEntry topic=">" >
						<!-- The constantPendingMessageLimitStrategy is used to prevent
                         slow topic consumers to block producers and affect other consumers
                         by limiting the number of messages that are retained
                         For more information, see:

                         http://activemq.apache.org/slow-consumer-handling.html

                        -->
						<pendingMessageLimitStrategy>
							<constantPendingMessageLimitStrategy limit="1000"/>
						</pendingMessageLimitStrategy>
					</policyEntry>
				</policyEntries>
			</policyMap>
		</destinationPolicy>

		<!--
            The managementContext is used to configure how ActiveMQ is exposed in
            JMX. By default, ActiveMQ uses the MBean server that is started by
            the JVM. For more information, see:

            http://activemq.apache.org/jmx.html
        -->
		<managementContext>
			<managementContext createConnector="false"/>
        </managementContext>

        <!--
        Import configuration for bridging between datacentres
        -->

		<!--
            Configure message persistence for the broker. The default persistence
            mechanism is the KahaDB store (identified by the kahaDB tag).
            For more information, see:

            http://activemq.apache.org/persistence.html

        <persistenceAdapter><kahaDB directory="${activemq.data}/kahadb"/></persistenceAdapter>
        -->
		<persistenceAdapter>
			<jdbcPersistenceAdapter dataSource="#postgres-ds-with-hikari-pool" createTablesOnStartup="true" lockKeepAlivePeriod="5000">
				<locker>
					<lease-database-locker leaseHolderId="tepstelis" lockAcquireSleepInterval="10000"/>
				</locker>
			</jdbcPersistenceAdapter>
		</persistenceAdapter>
		<!--
            The systemUsage controls the maximum amount of space the broker will
            use before disabling caching and/or slowing down producers. For more information, see:
            http://activemq.apache.org/producer-flow-control.html
          -->
		<systemUsage>
			<systemUsage>
				<memoryUsage>
					<memoryUsage percentOfJvmHeap="70" /></memoryUsage>
				<storeUsage>
					<storeUsage limit="10 gb"/></storeUsage>
				<tempUsage>
					<tempUsage limit="5 gb"/></tempUsage>
			</systemUsage>
		</systemUsage>
		<!--
            The transport connectors expose ActiveMQ over a given protocol to
            clients and other brokers. For more information, see:

            http://activemq.apache.org/configuring-transports.html
        -->
		<transportConnectors>
 		<transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
			<!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
		</transportConnectors>
		<!-- destroy the spring context on shutdown to stop jetty -->
		<shutdownHooks>
			<bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
		</shutdownHooks>


	</broker>
	<!--
        Enable web consoles, REST and Ajax APIs and demos
        The web consoles requires by default login, you can disable this in the jetty.xml file

        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
    -->
	<import resource="jetty.xml"/>
</beans>
<!-- END SNIPPET: example -->