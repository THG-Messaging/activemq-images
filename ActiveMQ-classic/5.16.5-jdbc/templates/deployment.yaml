apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "ActiveMQ-JDBC.fullname" . }}
  labels:
    {{- include "ActiveMQ-JDBC.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ActiveMQ-JDBC.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ActiveMQ-JDBC.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ActiveMQ-JDBC.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: pvc-amq-logs
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.webUI.port }}
              protocol: TCP
          {{- if or (.Values.metrics.enabled) (eq (.Values.metrics.enabled | toString) "<nil>") }} 
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          {{ end }}
            - name: transport
              containerPort: 61616
              protocol: TCP
          {{- if or (.Values.JMX.enabled) (eq (.Values.JMX.enabled | toString) "<nil>") }} 
            - name: jmx
              containerPort: {{ .Values.JMX.port }}
              protocol: TCP
          {{ end }}
          volumeMounts:
          - name: logs
            mountPath: "/opt/apache-activemq-{{.Values.image.tag}}/data"
          livenessProbe:
            tcpSocket:
               port: {{ .Values.webUI.port }}
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            tcpSocket:
               port: {{ .Values.webUI.port }}
            initialDelaySeconds: 15
            periodSeconds: 15
          env:
            - name: BROKER_NAME
              value: {{ .Values.brokerName }}
            - name: DB_HOST
              value: {{ .Values.JDBCconfig.dbHost }}
            - name: DB_USERNAME
              value: {{ .Values.JDBCconfig.dbUser }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.JDBCconfig.existingDbPasswordSecret.name }}
                  key: {{ .Values.JDBCconfig.existingDbPasswordSecret.key }}
            - name: DB_NAME
              value: {{ .Values.JDBCconfig.dbName }}
            - name: CREATE_DB_TABLES
              value: "true"
            - name: ACTIVEMQ_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: amq-admin-secret
                  key: amq-admin-secret
            {{- if or (.Values.metrics.enabled) (eq (.Values.metrics.enabled | toString) "<nil>") }} 
            - name: METRICS_ENABLED
              value: "true" 
            {{- end }}           
            - name: USE_JMX
              value: "true"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
